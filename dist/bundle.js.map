{"version":3,"sources":["webpack:///webpack/bootstrap d0359c4839f0dc6250ff","webpack:///./js/index.js","webpack:///./js/constants.js","webpack:///./js/ApiHandler.js","webpack:///./js/utils.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD,QAAO,WAAW;AAClB,QAAO,gEAAgE;;AAEvE;AACA;AACA;;AAEA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA,iCAAgC,KAAK;AACrC,gCAA+B,IAAI;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO,aAAa;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAW;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAW;;AAEX;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAqB,OAAO;AAC5B;AACA;AACA;;AAEA;AACA,wBAAuB,KAAK;AAC5B;AACA,iBAAgB,KAAK;AACrB,cAAa,UAAU;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAQ;AACR;AACA,SAAQ,KAAK;AACb,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;;AAEA,kBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH,mFAAkF,GAAG,uBAAuB,GAAG,KAAK,gBAAgB;;AAEpI;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,yBAAyB;AAC7D,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,yBAAyB;AAC3D,QAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,0DAAyD,eAAe;AACxE;AACA;AACA;AACA;AACA,MAAK;AACL,yBAAwB,WAAW,KAAK,UAAU,MAAM,yBAAyB;;AAEjF;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;;AAEH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,IAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,OAAO;AACpC,QAAO;AACP;AACA,MAAK;;AAEL;AACA,IAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,oBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,0BAA0B;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;ACppCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC;;;;;;;AC3CjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA,kBAAiB,iBAAiB,MAAM,aAAa;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA,kBAAiB,iBAAiB,MAAM,WAAW;AACnD;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,QAAO;AACP;AACA,MAAK;AACL;AACA;;AAEA;;;;;;;AC3EA,QAAO,gCAAgC;;AAEvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAoC,KAAK;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d0359c4839f0dc6250ff\n **/","const {\n  LS_KEY_EMAIL,\n  LINE_HEIGHT,\n  DETAIL_PADDING,\n  MILLISECOND_A_DAY,\n  BUGZILLA_BIRTH_YEAR,\n  MONTHS,\n  COLORS,\n  PRIORITY_REGEX\n} = require(\"./constants\");\nconst {ApiHandler} = require(\"./ApiHandler\");\nconst {needWhiteText, getMondayOfFirstWeek, findLane, createSVGElement} = require(\"./utils\");\n\nfunction init() {\n  addListeners();\n  let email = getEmail();\n\n  if (email !== null) {\n    onEmailChange(email);\n  } else {\n    setFormMode();\n  }\n}\n\nfunction onEmailChange(email) {\n  setDashboardMode();\n  if (email !== bugzillaEmail) {\n    if (isZoomed()) {\n      zoomOut();\n    }\n\n    svg.innerHTML = svg.querySelector(\"defs\").outerHTML;\n    bugzillaEmail = email;\n    document.querySelector(\".email\").textContent = email;\n    emailInput.value = email;\n\n    ApiHandler.getUserBugs(email).then(function (data) {\n      lanes = [];\n      displayedYears = [];\n      bugs = data.bugs;\n      setDashboardYear((new Date()).getFullYear());\n    });\n  }\n}\n\nfunction setDashboardMode() {\n  formSection.classList.add(\"hidden\");\n  dashboardSection.classList.remove(\"hidden\");\n}\n\nfunction setFormMode() {\n  dashboardSection.classList.add(\"hidden\");\n  formSection.classList.remove(\"hidden\");\n  emailInput.focus();\n  emailInput.select();\n}\n\nfunction isFormMode() {\n  return !formSection.classList.contains(\"hidden\");\n}\n\nfunction isZoomed() {\n  return document.body.classList.contains(\"zoomed\");\n}\n\nfunction getEmail() {\n  let urlParamEmail;\n  if (window.URLSearchParams) {\n    urlParamEmail = new URLSearchParams(location.search.substr(1)).get(\"email\");\n  } else {\n    let fields = location.search.substring(1).split(\"&\");\n    let fieldMap = {};\n    fields.forEach(function (item) {\n      let splits = item.split(\"=\");\n      fieldMap[splits[0]] = splits[1];\n    });\n    if (fieldMap.email) {\n      urlParamEmail = decodeURIComponent(fieldMap.email);\n    }\n  }\n\n  if (urlParamEmail) {\n    return urlParamEmail;\n  }\n\n  let lsEmail = localStorage.getItem(LS_KEY_EMAIL);\n  if (lsEmail !== null) {\n    return lsEmail;\n  }\n\n  return null;\n}\n\nfunction hideTooltip() {\n  if (tooltipEl.innerHTML === \"\") {\n    return null;\n  }\n  tooltipHideId = setTimeout(function () {\n    tooltipHideId = null;\n    tooltipEl.style.left = `-9999px`;\n    tooltipEl.style.top = `0`;\n    tooltipEl.style.backgroundColor = \"\";\n    tooltipEl.textContent = \"\";\n    tooltipEl.classList.remove(\"dark\");\n  }, 200);\n  return tooltipHideId;\n}\n\nfunction addListeners() {\n  document.addEventListener(\"keydown\", onKeyDown);\n  form.addEventListener(\"submit\", onFormSubmit, false);\n  svg.addEventListener(\"click\", onSvgClick, false);\n  svg.addEventListener(\"mousemove\", onMouseMove, false);\n\n  document.querySelector(\".edit-email\").addEventListener(\"click\", setFormMode);\n  document.getElementById(\"esc\").addEventListener(\"click\", zoomOut);\n\n  Array.from(document.querySelectorAll(\".year-nav\")).forEach(function (btn) {\n    btn.addEventListener(\"click\", function () {\n      let newYear = parseInt(btn.getAttribute(\"data-year\"), 10);\n      setDashboardYear(newYear);\n    });\n  });\n}\n\nfunction onFormSubmit(e) {\n  let data = new FormData(e.target);\n  let email = data.get(\"email\");\n  if (email) {\n    localStorage.setItem(LS_KEY_EMAIL, email);\n    history.pushState(\n      {},\n      \"Bugzilla Dashboard for \" + email,\n      location.protocol + location.pathname + \"?email=\" + email\n    );\n    onEmailChange(email);\n  }\n  e.preventDefault();\n}\n\nfunction onMouseMove(e) {\n  if (\n    e.target.getAttribute(\"data-tooltip\") ||\n    (\n      !isZoomed() &&\n      e.target.parentNode.tagName === \"g\" &&\n      e.target.parentNode.getAttribute(\"data-tooltip\")\n    )\n  ) {\n    let newTarget = e.target.closest(\"[data-tooltip]\");\n\n    if (currentTooltipTarget === null || currentTooltipTarget != newTarget) {\n      if (tooltipHideId) {\n        clearTimeout(tooltipHideId);\n        tooltipHideId = null;\n      }\n\n      currentTooltipTarget = newTarget;\n\n      tooltipEl.innerHTML = currentTooltipTarget.getAttribute(\"data-tooltip\");\n\n      let left = e.clientX - (tooltipEl.clientWidth / 2);\n      let top = e.clientY + (DETAIL_PADDING * (isZoomed() ? 3 : 1));\n      if (left < 0) {\n        left = DETAIL_PADDING;\n      } else if (left + tooltipEl.clientWidth > document.body.clientWidth) {\n        left = document.body.clientWidth - tooltipEl.clientWidth - DETAIL_PADDING;\n      }\n\n      if (top + tooltipEl.clientHeight > document.body.clientHeight) {\n        top = e.clientY - tooltipEl.clientHeight - DETAIL_PADDING;\n      }\n\n      tooltipEl.style.left = `${left}px`;\n      tooltipEl.style.top = `${top}px`;\n\n      if (\n        currentTooltipTarget.getAttribute(\"fill\") ||\n        currentTooltipTarget.getAttribute(\"stroke\")\n      ) {\n        tooltipEl.style.backgroundColor = (\n          currentTooltipTarget.getAttribute(\"fill\") ||\n          currentTooltipTarget.getAttribute(\"stroke\")\n        );\n      }\n\n      if (needWhiteText(tooltipEl.style.backgroundColor)) {\n        tooltipEl.classList.add(\"dark\");\n      } else {\n        tooltipEl.classList.remove(\"dark\");\n      }\n    }\n  } else {\n    currentTooltipTarget = null;\n    if (!tooltipHideId) {\n      hideTooltip();\n    }\n  }\n}\n\nfunction onKeyDown(e) {\n  let formMode = isFormMode();\n  let zoomed = isZoomed();\n  let {x, y, height} = svg.viewBox.baseVal;\n\n  if (e.key === \"Escape\" || e.code === \"Escape\") {\n    if (formMode && bugzillaEmail) {\n      setDashboardMode();\n    }\n    if (zoomed) {\n      zoomOut();\n    }\n    return;\n  }\n\n  if (!formMode && !zoomed && (e.key === \"ArrowRight\" || e.code === \"ArrowRight\")) {\n    if (currentYear !== (new Date()).getFullYear()) {\n      setDashboardYear(currentYear + 1);\n      return;\n    }\n  }\n\n  if (!formMode && !zoomed && (e.key === \"ArrowLeft\" || e.code === \"ArrowLeft\")) {\n    if (currentYear !== BUGZILLA_BIRTH_YEAR) {\n      setDashboardYear(currentYear - 1);\n      return;\n    }\n  }\n\n  if (!formMode && !zoomed && (e.key === \"ArrowDown\" || e.code === \"ArrowDown\")) {\n    if (isMoving) {\n      return;\n    }\n\n    if (y + height < ((lanes.length - 1) * LINE_HEIGHT)) {\n      panViewBox(x, y + height);\n      navEl.classList.add(\"scrolled\");\n    }\n  }\n\n  if (!formMode && !zoomed && (e.key === \"ArrowUp\" || e.code === \"ArrowUp\")) {\n    if (isMoving) {\n      return;\n    }\n    if (y > 0) {\n      panViewBox(x, y - height);\n      if (y - height === 0) {\n        navEl.classList.remove(\"scrolled\");\n      }\n    }\n  }\n}\n\nfunction onSvgClick(e) {\n  if (!isZoomed()) {\n    if (\n      e.target.classList.contains(\"bug-line\") ||\n      e.target.parentElement.classList.contains(\"bug-line\")\n    ) {\n      var el = e.target;\n      if (!el.classList.contains(\"bug-line\")) {\n        el = e.target.parentElement;\n      }\n      if (e.ctrlKey || e.metaKey) {\n        window.open(\"https://bugzilla.mozilla.org/show_bug.cgi?id=\" + el.getAttribute(\"data-bug-id\"));\n      } else {\n        zoomInBug(el);\n      }\n    }\n  }\n}\n\nfunction setDashboardYear(year) {\n  if (isMoving) {\n    return;\n  }\n  currentYear = year;\n\n  document.querySelector(\"nav .year\").textContent = year;\n\n  panViewBox((year - BUGZILLA_BIRTH_YEAR) * svg.viewBox.baseVal.width);\n  updateDashboardNavigation(year);\n\n  if (displayedYears.indexOf(year) === -1) {\n    displayedYears.push(year);\n    drawMonths(year);\n    drawWeeks(year);\n    fetchBugsHistoryForYear(year).catch((ex) => console.error(ex));\n  }\n}\n\nfunction panViewBox(toX, toY, duration) {\n  if (typeof toY === \"undefined\") {\n    toY = svg.viewBox.baseVal.y;\n  }\n\n  if (typeof duration === \"undefined\") {\n    duration = 200;\n  }\n\n  isMoving = true;\n  hideTooltip();\n  let xStart = svg.viewBox.baseVal.x;\n  let xDelta = svg.viewBox.baseVal.x - toX;\n\n  let yStart = svg.viewBox.baseVal.y;\n  let yDelta = svg.viewBox.baseVal.y - toY;\n\n  let start;\n  let pan = function (timestamp) {\n    if (!start) {\n      start = timestamp;\n    }\n\n    let t = (timestamp - start) / duration;\n    // Easing function https://gist.github.com/gre/1650294\n    t = t < .5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    if (t <= 1) {\n      svg.viewBox.baseVal.x = xStart - (xDelta * t);\n      svg.viewBox.baseVal.y = yStart - (yDelta * t);\n      requestAnimationFrame(pan);\n    } else {\n      svg.viewBox.baseVal.x = toX;\n      svg.viewBox.baseVal.y = toY;\n      isMoving = false;\n    }\n  };\n  requestAnimationFrame(pan);\n}\n\nfunction updateDashboardNavigation(year) {\n  let previousYearButton = document.querySelector(\".year-nav[data-direction=previous]\");\n  let nextYearButton = document.querySelector(\".year-nav[data-direction=next]\");\n\n  previousYearButton.setAttribute(\"data-year\", year - 1);\n  nextYearButton.setAttribute(\"data-year\", year + 1);\n\n  if (year === (new Date()).getFullYear()) {\n    nextYearButton.setAttribute(\"disabled\", true);\n    nextYearButton.setAttribute(\"title\", \"You can't go to the future, Marty\");\n  } else {\n    nextYearButton.removeAttribute(\"disabled\");\n    nextYearButton.removeAttribute(\"title\");\n  }\n\n  if (year === BUGZILLA_BIRTH_YEAR) {\n    previousYearButton.setAttribute(\"disabled\", true);\n    previousYearButton.setAttribute(\"title\",\n      \"You can't go further, Bugzilla did not exists before\");\n  } else {\n    previousYearButton.removeAttribute(\"disabled\");\n    previousYearButton.removeAttribute(\"title\");\n  }\n}\n\nfunction fetchBugsHistoryForYear(year) {\n  document.querySelector(\"nav\").classList.add(\"loading\");\n  let firstMonday = getMondayOfFirstWeek(year);\n\n  let yearBugs = bugs.filter(function (x) {\n    if (x.displayed) {\n      return false;\n    }\n\n    if (!x.cf_last_resolved) {\n      return true;\n    }\n\n    if (x.status === \"REOPENED\") {\n      Object.assign(x, {\n        \"cf_last_resolved\": null\n      });\n      return true;\n    }\n\n    return (new Date(x.cf_last_resolved) >= firstMonday);\n  });\n\n  yearBugs.sort(function (a, b) {\n    // If bugs have not the same state\n    if (a.cf_last_resolved != b.cf_last_resolved) {\n      // If \"a\" is not resolved, a comes first\n      if (a.cf_last_resolved == null) {\n        return -1;\n      }\n\n      // If \"b\" is not resolved, b comes first\n      if (b.cf_last_resolved == null) {\n        return 1;\n      }\n    }\n\n    var priorityA = (PRIORITY_REGEX.test(a.priority) ? a.priority : \"P3\");\n    var priorityB = (PRIORITY_REGEX.test(b.priority) ? b.priority : \"P3\");\n    // \"a\" and \"b\" are in the same state ( both resolved, or both unresolved)\n    // we want to get the higher priority bugs first\n    if (priorityA != priorityB) {\n      return priorityA < priorityB ? -1 : 1;\n    }\n\n    // \"a\" and \"b\" are in the same state (both resolved, or both unresolved)\n    // and have the same priority\n    // We want to get the older bugs first\n    return a.creation_time < b.creation_time ? -1 : 1;\n  });\n\n  return yearBugs.reduce(function (previousBugPromise, bug, idx) {\n    return new Promise(function (resolve, reject) {\n      previousBugPromise.then(() => {\n        ApiHandler.getBugHistory(bug).then(function (history) {\n          bug.history = history;\n\n          // A bug is being worked on by the user when they:\n          // - assigned on the bug\n          // - OR when he made a change on the bug\n          // - OR when is cc'ed on the bug\n          // - OR created the bug\n          [...bug.history].reverse().some(function (activity) {\n            var hasAssignement = (activity.who === bugzillaEmail);\n            if (!hasAssignement) {\n              hasAssignement = activity.changes.some(change => (\n                change.added === bugzillaEmail && (\n                  change.field_name === \"cc\" ||\n                  change.field_name === \"assigned_to\"\n                )\n              ));\n            }\n\n            if (hasAssignement === true) {\n              bug.startDate = new Date(activity.when);\n            }\n\n            return hasAssignement;\n          });\n\n          // If the bug has no startDate, we assume it is the creation date\n          if (!bug.startDate && bug.assigned_to === bugzillaEmail) {\n            bug.startDate = new Date(bug.creation_time);\n          }\n\n          if (bug.cf_last_resolved) {\n            bug.endDate = new Date(bug.cf_last_resolved);\n          } else {\n            bug.endDate = new Date();\n          }\n\n          // If the startDate is greater than the endDate, change it to the creation date\n          if (bug.startDate > bug.endDate) {\n            bug.startDate = new Date(bug.creation_time);\n          }\n\n          // Strip every history entry that is not in the (startDate,endDate) period\n          bug.history = bug.history.filter(activity => {\n            let when = new Date(activity.when);\n            return when >= bug.startDate && when <= bug.endDate;\n          });\n\n          drawBug(bug);\n          bug.displayed = true;\n          resolve(bug);\n        });\n      });\n    });\n  }, Promise.resolve())\n  .catch((e) => console.error(e))\n  .then(function () {\n    document.querySelector(\"nav\").classList.remove(\"loading\");\n  });\n}\n\nfunction getPositionFromDate(date, period) {\n  if (period) {\n    let start = period[0];\n    let end = period[1];\n    let length = (end - start);\n    if (length === 0) {\n      let periodEnd = svg.viewBox.baseVal.x + YEAR_WIDTH - DETAIL_PADDING;\n      return periodEnd + (end - date);\n    }\n\n    let percent = (date - start) / length;\n    let periodStart = svg.viewBox.baseVal.x + DETAIL_PADDING;\n    let periodEnd = svg.viewBox.baseVal.x + YEAR_WIDTH - DETAIL_PADDING;\n    let periodLength = periodEnd - periodStart;\n\n    return periodStart + (periodLength * percent);\n  }\n\n  return (date - getMondayOfFirstWeek(BUGZILLA_BIRTH_YEAR)) / MILLISECOND_A_DAY;\n}\n\nfunction drawBug(bug) {\n  var strokeWidth = 2;\n  var endCircleR = 1.75;\n  var minMultiplier = 0.25;\n  var maxMultiplier = 1.75;\n\n  if (PRIORITY_REGEX.test(bug.priority)) {\n    var priorityRatio = (\n      minMultiplier + (\n        (((-1.25 / 5) * bug.priority[1]) + 1.25) * (maxMultiplier - minMultiplier)\n      )\n    );\n    strokeWidth = strokeWidth * priorityRatio;\n    endCircleR = endCircleR * priorityRatio;\n  }\n\n  var colorIndex = (bug.id % (COLORS.length - 1));\n  var bugColor = COLORS[colorIndex];\n\n  var startPoint = getPositionFromDate(bug.startDate);\n  var endPoint = getPositionFromDate(bug.endDate);\n  var laneNumber = findLane(lanes, startPoint, endPoint);\n\n  if (!lanes[laneNumber]) {\n    lanes[laneNumber] = [];\n  }\n  lanes[laneNumber].push([startPoint, endPoint]);\n  var y = (LINE_HEIGHT * 1.5) + (laneNumber * LINE_HEIGHT);\n  var title = `Bug ${bug.id}`;\n  if (PRIORITY_REGEX.test(bug.priority)) {\n    title += \" [\" + bug.priority + \"]\";\n  }\n\n  var body = bug.summary;\n  if (bug.flags.some(({name}) => name === \"needinfo\")) {\n    var needinfo = bug.flags\n      .filter(({name}) => name === \"needinfo\")\n      .map(({requestee}) => requestee);\n\n    body += \"<br>Need info from : \" + needinfo.join(\" - \");\n  }\n  var bugGroup = createSVGElement(\"g\", {\n    \"class\": \"bug-line\",\n    \"data-bug-id\": bug.id,\n    \"fill\": bugColor,\n    \"data-tooltip\": `\n      ${title}\n      <hr>\n      ${body}`\n  });\n\n  var bugAssignedLine = createSVGElement(\"line\", {\n    \"class\": \"assignement-line\",\n    \"x1\": startPoint,\n    \"y1\": y,\n    \"x2\": endPoint,\n    \"y2\": y,\n    \"stroke\": bugColor,\n    \"stroke-width\": strokeWidth,\n    \"stroke-linecap\": \"round\"\n  });\n  bugGroup.appendChild(bugAssignedLine);\n  if (bug.cf_last_resolved) {\n    if (bug.resolution == \"FIXED\") {\n      var endCircle = createSVGElement(\"circle\", {\n        \"class\": \"terminator resolved\",\n        \"cx\": endPoint,\n        \"cy\": y,\n        \"r\": endCircleR,\n        \"fill\": bugColor\n      });\n      bugGroup.appendChild(endCircle);\n    } else {\n      var lineHeight = strokeWidth * 0.9;\n      var endVerticalLine = createSVGElement(\"line\", {\n        \"class\": \"terminator closed\",\n        \"x1\": endPoint + (strokeWidth / 4),\n        \"y1\": y - lineHeight,\n        \"x2\": endPoint + (strokeWidth / 4),\n        \"y2\": y + lineHeight,\n        \"stroke\": bugColor,\n        \"stroke-width\": strokeWidth / 2,\n      });\n      bugGroup.appendChild(endVerticalLine);\n    }\n  } else {\n    let needInfoFlags = bug.flags.filter(flag => flag.name === \"needinfo\");\n    if (needInfoFlags.length > 0) {\n      var olderFlag = needInfoFlags.reduce((previous, current) => {\n        if (previous === null || current.creation_date < previous.creation_date) {\n          return current;\n        }\n        return previous;\n      }, null);\n      var flagStartPoint = getPositionFromDate(new Date(olderFlag.creation_date));\n      if (flagStartPoint > endPoint - strokeWidth) {\n        flagStartPoint = endPoint - strokeWidth;\n      }\n\n      var endRect = createSVGElement(\"rect\", {\n        \"class\": \"terminator needinfo\",\n        \"x\": flagStartPoint,\n        \"y\": y - strokeWidth,\n        \"width\": endPoint - flagStartPoint + (strokeWidth / 2),\n        \"height\": strokeWidth * 2,\n        \"fill\": bugColor,\n      });\n      var endRectStriped = createSVGElement(\"rect\", {\n        \"class\": \"terminator needinfo\",\n        \"x\": flagStartPoint,\n        \"y\": y - strokeWidth,\n        \"width\": endPoint - flagStartPoint + (strokeWidth / 2),\n        \"height\": strokeWidth * 2,\n        \"fill\": \"url(#pattern-stripe)\",\n      });\n\n      bugGroup.appendChild(endRect);\n      bugGroup.appendChild(endRectStriped);\n    }\n  }\n  svg.appendChild(bugGroup);\n}\n\nfunction drawWeeks(year) {\n  let weekGroup = createSVGElement(\"g\");\n  let firstDay = getMondayOfFirstWeek(year);\n  weekGroup.classList.add(\"weeks\");\n  for (var i = 0; i <= 52; i++) {\n    let monday = new Date(firstDay.getTime() + (i * 7 * MILLISECOND_A_DAY));\n    let x = getPositionFromDate(monday);\n    let weekLine = createSVGElement(\"line\", {\n      \"x1\": x,\n      \"y1\": 0,\n      \"x2\": x,\n      \"y2\": 10000,\n      \"stroke\": \"rgba(0,0,0,0.3)\",\n      \"stroke-width\": 0.1\n    });\n    weekGroup.appendChild(weekLine);\n  }\n  svg.insertBefore(weekGroup, svg.firstChild);\n}\n\nfunction drawMonths(year) {\n  let monthGroup = createSVGElement(\"g\", {\n    \"class\": \"months\"\n  });\n  let monthWidth = 5;\n\n  for (var i = 0; i < 12; i++) {\n    let firstDay = new Date(year, i, 1, 0, 0, 0);\n    let x = getPositionFromDate(firstDay);\n    let monthLine = createSVGElement(\"line\", {\n      \"x1\": x,\n      \"y1\": 0,\n      \"x2\": x,\n      \"y2\": 10000,\n      \"stroke\": \"#FFC107\",\n      \"stroke-width\": 0.5,\n      \"stroke-opacity\": 0.5\n    });\n\n    let monthText = createSVGElement(\"text\", {\n      \"x\": (x + monthWidth / 2),\n      \"y\": (monthWidth - 1),\n      \"font-size\": 4,\n      \"font-family\": \"Signika\",\n      \"fill\": \"rgba(0,0,0,0.5)\",\n      \"text-anchor\": \"middle\",\n      \"title\": MONTHS[i]\n    });\n    monthText.innerHTML = MONTHS[i][0];\n\n    let monthRect = createSVGElement(\"rect\", {\n      \"x\": x,\n      \"y\": 0,\n      \"width\": monthWidth,\n      \"height\": monthWidth,\n      \"fill\": \"#FFC107\"\n    });\n\n    monthGroup.appendChild(monthRect);\n    monthGroup.appendChild(monthLine);\n    monthGroup.appendChild(monthText);\n  }\n\n  svg.insertBefore(monthGroup, svg.firstChild);\n}\n\nfunction zoomInBug(el) {\n  isMoving = true;\n  hideTooltip();\n\n  var id = el.getAttribute(\"data-bug-id\");\n  var bugData = bugs.find(function (item) {\n    return (item.id == id);\n  });\n  bugTitleEl.innerHTML = `<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=${id}\" target=\"blank\">Bug ${id} - ${bugData.summary}</a>`;\n\n  var line = el.querySelector(\"line.assignement-line\");\n\n  var duration = 500;\n  var x1 = parseFloat(line.getAttribute(\"x1\"));\n  var x2 = parseFloat(line.getAttribute(\"x2\"));\n  var y = parseFloat(line.getAttribute(\"y1\"));\n  var strokeWidth = parseFloat(line.getAttribute(\"stroke-width\"));\n\n  line.setAttribute(\"data-x1\", x1);\n  line.setAttribute(\"data-x2\", x2);\n  line.setAttribute(\"data-y\", y);\n  line.setAttribute(\"data-stroke-width\", strokeWidth);\n\n  let lineStart = svg.viewBox.baseVal.x + DETAIL_PADDING;\n  let lineEnd = svg.viewBox.baseVal.x + YEAR_WIDTH - DETAIL_PADDING;\n\n  var x1FromStart = x1 - lineStart;\n  var x1MoveByMs = x1FromStart / duration;\n  var x2FromStart = lineEnd - x2;\n  var x2MoveByMs = x2FromStart / duration;\n  var yFromMiddle = svg.viewBox.baseVal.y + 60 - y;\n  var yMoveByMs = yFromMiddle / duration;\n  var finalStrokeWidth = 20;\n  var strokeWidthMoveByMs = (finalStrokeWidth - strokeWidth) / duration;\n  var start = 0;\n\n  function zoom(timestamp) {\n    if (!start) {\n      start = timestamp;\n    }\n\n    var progress = timestamp - start;\n    if (progress < duration) {\n      line.setAttribute(\"x1\", x1 - (x1MoveByMs * progress));\n      line.setAttribute(\"x2\", x2 + (x2MoveByMs * progress));\n      line.setAttribute(\"y1\", y + (yMoveByMs * progress));\n      line.setAttribute(\"y2\", y + (yMoveByMs * progress));\n      line.setAttribute(\"stroke-width\", strokeWidth + (strokeWidthMoveByMs * progress));\n      requestAnimationFrame(zoom);\n    } else {\n      line.setAttribute(\"x1\", lineStart);\n      line.setAttribute(\"x2\", lineEnd);\n      line.setAttribute(\"y1\", svg.viewBox.baseVal.y + 60);\n      line.setAttribute(\"y2\", svg.viewBox.baseVal.y + 60);\n      line.setAttribute(\"stroke-width\", finalStrokeWidth);\n\n      drawBugDetail(el, bugData);\n      isMoving = false;\n    }\n  }\n\n  requestAnimationFrame(zoom);\n\n  document.body.classList.add(\"zoomed\");\n  el.classList.toggle(\"detail\");\n}\n\nfunction drawBugDetail(el, bugData) {\n  let bugPeriod = [bugData.startDate, bugData.endDate];\n  let y = svg.viewBox.baseVal.y + 60;\n\n  let bugGroup = createSVGElement(\"g\", {\n    \"class\": \"detail-bug-line\"\n  });\n\n  let terminator;\n  let terminatorPosition = getPositionFromDate(bugData.endDate, bugPeriod);\n  if (bugData.cf_last_resolved) {\n    if (bugData.resolution == \"FIXED\") {\n      terminator = createSVGElement(\"circle\", {\n        \"cx\": terminatorPosition,\n        \"cy\": y,\n        \"r\": 9,\n        \"fill\": \"rgba(0,0,0,0.3)\",\n        \"data-tooltip\": `RESOLVED ${bugData.cf_last_resolved}`\n      });\n    } else {\n      terminator = createSVGElement(\"line\", {\n        \"class\": \"terminator\",\n        \"x1\": terminatorPosition,\n        \"x2\": terminatorPosition,\n        \"y1\": y - 9,\n        \"y2\": y + 9,\n        \"stroke\": \"rgba(0,0,0,0.3)\",\n        \"stroke-width\": 2,\n        \"data-tooltip\": `CLOSED ${bugData.cf_last_resolved}`\n      });\n    }\n  }\n\n  if (terminator) {\n    bugGroup.appendChild(terminator);\n  }\n\n  let bugLine = createSVGElement(\"line\", {\n    \"x1\": getPositionFromDate(new Date(bugData.creation_time), bugPeriod),\n    \"y1\": y,\n    \"x2\": getPositionFromDate(bugData.endDate, bugPeriod),\n    \"y2\": y,\n    \"stroke\": \"rgba(0,0,0,1)\",\n    \"stroke-width\": 2,\n    \"stroke-linecap\": \"round\"\n  });\n  bugGroup.appendChild(bugLine);\n\n  let groups = [];\n  let historyEntries = [];\n  bugData.history.forEach(function (entry) {\n    if (!userColor[entry.who]) {\n      if (USERS_COLORS.length === 0) {\n        USERS_COLORS = COLORS.map((x) => x);\n      }\n      userColor[entry.who] = USERS_COLORS.shift();\n    }\n    let entryColor = userColor[entry.who];\n\n    let entryTitleList = document.createElement(\"ul\");\n    entry.changes.sort(function (a, b) {\n      if (a.added == \"\" && a.added === b.added) {\n        return 0;\n      }\n      return a.added !== 0 ? -1 : 0;\n    });\n\n    entry.changes.forEach(function (change) {\n      let li = document.createElement(\"li\");\n      li.innerHTML = change.field_name + \" \" + (\n        change.removed !== \"\" ? `<span class=\"removed\">${change.removed}</span>` : \"\"\n      ) + (\n        change.added !== \"\" ? \" ➜ \" + change.added : \"\"\n      ) + \" \";\n      entryTitleList.appendChild(li);\n    });\n    let entryTitle = `${entry.when} - ${entry.who}<hr>${entryTitleList.outerHTML}`;\n\n    historyEntries.push({\n      x: getPositionFromDate(new Date(entry.when), bugPeriod),\n      title: entryTitle,\n      color: entryColor,\n      mine: entry.who === bugzillaEmail\n    });\n  });\n\n  historyEntries.sort(function (a, b) {\n    return a.x > b.x ? 1 : -1;\n  });\n  historyEntries.reduce(function (previousValue, currentValue, currentIndex, array) {\n    if (groups.length > 0 && previousValue && currentValue.x - previousValue.x < 10) {\n      groups[groups.length - 1].push(currentValue);\n    } else {\n      groups.push([currentValue]);\n    }\n    return currentValue;\n  }, null);\n\n  var circleR = 10;\n\n  groups.forEach(function (group, index) {\n    var groupGroup = createSVGElement(\"g\");\n\n    var x1 = group[0].x;\n    var x2 = group[group.length - 1].x;\n\n    var groupLine = createSVGElement(\"line\", {\n      \"x1\": x1,\n      \"x2\": x2,\n      \"y1\": y,\n      \"y2\": y,\n      \"stroke\": \"rgba(0,0,0,1)\",\n      \"stroke-width\": 12,\n      \"stroke-linecap\": \"round\"\n    });\n    groupGroup.appendChild(groupLine);\n\n    var clipId = \"group-\" + index;\n    var groupClipath = createSVGElement(\"clipPath\", {\n      \"id\": clipId\n    });\n\n    var startCircleClip = createSVGElement(\"circle\", {\n      \"cx\": x1,\n      \"cy\": y,\n      \"r\": (circleR / 2)\n    });\n\n    var endCircleClip = createSVGElement(\"circle\", {\n      \"cx\": x2,\n      \"cy\": y,\n      \"r\": (circleR / 2)\n    });\n\n    var rectClip = createSVGElement(\"rect\", {\n      \"x\": x1,\n      \"y\": (y - (circleR / 2)),\n      \"height\": circleR,\n      \"width\": (x2 - x1)\n    });\n\n    groupClipath.appendChild(startCircleClip);\n    groupClipath.appendChild(endCircleClip);\n    groupClipath.appendChild(rectClip);\n\n    groupGroup.appendChild(groupClipath);\n\n    let stroke = 0.5;\n\n    var groupStart = x1 - (circleR / 2) - stroke;\n    var groupEnd = x2 + (circleR / 2) + stroke;\n    var entryWidth = (groupEnd - groupStart) / group.length;\n    group.forEach(function (groupEntry, idx) {\n      var entryRect = createSVGElement(\"rect\", {\n        \"x\": groupStart + (entryWidth * idx),\n        \"width\": entryWidth,\n        \"fill\": groupEntry.color,\n        \"stroke\": \"black\",\n        \"data-tooltip\": groupEntry.title,\n        \"y\": y - circleR,\n        \"height\": circleR * 2,\n        \"stroke-width\": stroke,\n        \"clip-path\": `url(#${clipId})`\n      });\n      groupGroup.appendChild(entryRect);\n    });\n\n    bugGroup.appendChild(groupGroup);\n  });\n\n  el.appendChild(bugGroup);\n\n  let daysOfAssignement = (\n    (\n      bugData.endDate.getTime() - bugData.startDate.getTime()\n    ) / MILLISECOND_A_DAY\n  );\n\n  let yearHorizontalLine = createSVGElement(\"line\", {\n    \"x1\": svg.viewBox.baseVal.x,\n    \"x2\": svg.viewBox.baseVal.x + svg.viewBox.baseVal.width,\n    \"y1\": y - 50,\n    \"y2\": y - 50,\n    \"stroke\": \"black\",\n    \"stroke-opacity\": 0.4,\n    \"stroke-width\": 0.2\n  });\n  bugGroup.insertBefore(yearHorizontalLine, bugGroup.firstChild);\n\n  let monthHorizontalLine = createSVGElement(\"line\", {\n    \"x1\": svg.viewBox.baseVal.x,\n    \"x2\": svg.viewBox.baseVal.x + svg.viewBox.baseVal.width,\n    \"y1\": y - 40,\n    \"y2\": y - 40,\n    \"stroke\": \"black\",\n    \"stroke-opacity\": 0.4,\n    \"stroke-width\": 0.2\n  });\n  bugGroup.insertBefore(monthHorizontalLine, bugGroup.firstChild);\n\n  if (daysOfAssignement < 45) {\n    let dayHorizontalLine = createSVGElement(\"line\", {\n      \"x1\": svg.viewBox.baseVal.x,\n      \"x2\": svg.viewBox.baseVal.x + svg.viewBox.baseVal.width,\n      \"y1\": y - 30,\n      \"y2\": y - 30,\n      \"stroke\": \"black\",\n      \"stroke-opacity\": 0.4,\n      \"stroke-width\": 0.2\n    });\n    bugGroup.insertBefore(dayHorizontalLine, bugGroup.firstChild);\n\n    let pos;\n    for (let i = 0; i <= daysOfAssignement + 2; i++) {\n      let day = new Date(bugData.startDate.getTime() + (i * MILLISECOND_A_DAY));\n      day.setHours(0, 0, 0);\n      pos = getPositionFromDate(day, bugPeriod);\n      var dayLine = createSVGElement(\"line\", {\n        \"x1\": pos,\n        \"y1\": y - 40,\n        \"x2\": pos,\n        \"y2\": y + circleR,\n        \"stroke\": \"black\",\n        \"stroke-opacity\": 0.1,\n        \"stroke-width\": .5\n      });\n      bugGroup.insertBefore(dayLine, bugGroup.firstChild);\n\n      if (pos && pos < svg.viewBox.baseVal.x) {\n        pos = svg.viewBox.baseVal.x;\n      }\n      var dayText = createSVGElement(\"text\", {\n        \"x\": (pos + 1),\n        \"y\": (y - 40 + 8),\n        \"font-size\": 8,\n        \"font-family\": \"Signika\",\n        \"fill\": \"#666\"\n      });\n      dayText.textContent = day.getDate();\n\n      let tomorrow = new Date(day.getTime() + MILLISECOND_A_DAY);\n      let nextPos = getPositionFromDate(tomorrow, bugPeriod);\n      if (nextPos < svg.viewBox.baseVal.x) {\n        nextPos = svg.viewBox.baseVal.x;\n      }\n\n      if (nextPos - pos > 10) {\n        bugGroup.insertBefore(dayText, bugGroup.firstChild);\n      }\n    }\n  }\n\n  let monthsAssigned = Math.ceil(\n    (\n      bugData.endDate.getTime() - bugData.startDate.getTime()\n    ) / MILLISECOND_A_DAY / 30\n  );\n\n  if (monthsAssigned < 36) {\n    let firstDayOfMonth = new Date(\n      bugData.startDate.getFullYear(),\n      bugData.startDate.getMonth(),\n      1\n    );\n    for (let i = 0; i <= monthsAssigned; i++) {\n      firstDayOfMonth.setHours(0, 0, 0);\n      let pos = getPositionFromDate(firstDayOfMonth, bugPeriod);\n      var monthLine = createSVGElement(\"line\", {\n        \"x1\": pos,\n        \"y1\": y - 50,\n        \"x2\": pos,\n        \"y2\": y + circleR,\n        \"stroke\": \"black\",\n        \"stroke-opacity\": 0.1,\n        \"stroke-width\": .5,\n      });\n      bugGroup.insertBefore(monthLine, bugGroup.firstChild);\n\n      if (pos < svg.viewBox.baseVal.x) {\n        pos = svg.viewBox.baseVal.x;\n      }\n\n      var monthText = createSVGElement(\"text\", {\n        \"x\": pos + 1,\n        \"y\": y - 50 + 8,\n        \"font-size\": 8,\n        \"font-family\": \"Signika\",\n        \"fill\": \"#666\"\n      });\n\n      let monthNumber = firstDayOfMonth.getMonth();\n      if (monthsAssigned < 9) {\n        monthText.textContent = MONTHS[monthNumber];\n      } else {\n        monthText.textContent = (monthNumber < 9 ? \"0\" : \"\") + (monthNumber + 1);\n      }\n\n      bugGroup.insertBefore(monthText, bugGroup.firstChild);\n\n      let nextMonth = firstDayOfMonth.getMonth() + 1;\n      firstDayOfMonth.setMonth(nextMonth);\n      if (nextMonth === 0) {\n        firstDayOfMonth.setFullYear(firstDayOfMonth.getFullYear() + 1);\n      }\n    }\n  }\n\n  let startYear = bugData.startDate.getFullYear();\n  let endYear = bugData.endDate.getFullYear();\n  for (var i = 0; i <= endYear - startYear; i++) {\n    let firstDayOfYear = new Date(startYear + i, 0, 1);\n    firstDayOfYear.setHours(0, 0, 0);\n\n    var pos = getPositionFromDate(firstDayOfYear, bugPeriod);\n    var yearLine = createSVGElement(\"line\", {\n      \"x1\": pos,\n      \"y1\": y - 60,\n      \"x2\": pos,\n      \"y2\": y + circleR,\n      \"stroke\": \"black\",\n      \"stroke-opacity\": 0.1,\n      \"stroke-width\": .5\n    });\n    bugGroup.insertBefore(yearLine, bugGroup.firstChild);\n\n    if (pos < svg.viewBox.baseVal.x) {\n      pos = svg.viewBox.baseVal.x;\n    }\n    var yearText = createSVGElement(\"text\", {\n      \"x\": pos + 1,\n      \"y\": y - 60 + 8,\n      \"font-size\": 8,\n      \"font-family\": \"Signika\",\n      \"fill\": \"#666\"\n    });\n    yearText.textContent = startYear + i;\n    bugGroup.insertBefore(yearText, bugGroup.firstChild);\n  }\n}\n\nfunction zoomOut() {\n  hideTooltip();\n  var zoomedEl = document.querySelector(\".detail\");\n  if (zoomedEl) {\n    var detail = zoomedEl.querySelector(\".detail-bug-line\");\n    if (detail) {\n      detail.remove();\n    }\n\n    var line = zoomedEl.querySelector(\"line.assignement-line\");\n    var duration = 500;\n    var x1 = parseFloat(line.getAttribute(\"x1\"));\n    var x2 = parseFloat(line.getAttribute(\"x2\"));\n    var y = parseFloat(line.getAttribute(\"y1\"));\n    var strokeWidth = parseFloat(line.getAttribute(\"stroke-width\"));\n\n    var initialX1 = parseFloat(line.getAttribute(\"data-x1\"));\n    var initialX2 = parseFloat(line.getAttribute(\"data-x2\"));\n    var initialY = parseFloat(line.getAttribute(\"data-y\"));\n    var initialStrokeWidth = parseFloat(line.getAttribute(\"data-stroke-width\"));\n\n    var x1Move = x1 - initialX1;\n    var x1MoveByMs = x1Move / duration;\n    var x2Move = x2 - initialX2;\n    var x2MoveByMs = x2Move / duration;\n    var yMove = y - initialY;\n    var yMoveByMs = yMove / duration;\n    var strokeWidthMoveByMs = (strokeWidth - initialStrokeWidth) / duration;\n    var start = 0;\n    let frameZoomOut = function (timestamp) {\n      if (!start) {\n        start = timestamp;\n      }\n      var progress = timestamp - start;\n      if (progress < duration) {\n        line.setAttribute(\"x1\", x1 - (x1MoveByMs * progress));\n        line.setAttribute(\"x2\", x2 - (x2MoveByMs * progress));\n        line.setAttribute(\"y1\", y - (yMoveByMs * progress));\n        line.setAttribute(\"y2\", y - (yMoveByMs * progress));\n        line.setAttribute(\"stroke-width\", strokeWidth - (strokeWidthMoveByMs * progress));\n        requestAnimationFrame(frameZoomOut);\n      } else {\n        line.setAttribute(\"x1\", initialX1);\n        line.setAttribute(\"x2\", initialX2);\n        line.setAttribute(\"y1\", initialY);\n        line.setAttribute(\"y2\", initialY);\n        line.setAttribute(\"stroke-width\", initialStrokeWidth);\n        document.querySelector(\".bug-title\").innerHTML = currentYear;\n        zoomedEl.classList.remove(\"detail\");\n        document.body.classList.remove(\"zoomed\");\n      }\n    };\n    requestAnimationFrame(frameZoomOut);\n  }\n}\n\nvar USERS_COLORS = COLORS.map((x) => x);\n\nvar lanes = [];\nvar bugs = [];\nvar displayedYears = [];\nvar bugzillaEmail = null;\n\nlet userColor = {};\n\nlet currentYear = (new Date()).getFullYear();\nlet isMoving = false;\n\nlet svg = document.querySelector(\"svg\");\n\nlet formSection = document.querySelector(\"section.form\");\nlet form = formSection.querySelector(\"form\");\nlet emailInput = form.querySelector(\"input[name=email]\");\nlet dashboardSection = document.querySelector(\"section.dashboard\");\nlet bugTitleEl = document.querySelector(\".bug-title\");\nlet navEl = document.querySelector(\"nav\");\n\nlet currentTooltipTarget;\nlet tooltipEl = document.createElement(\"div\");\ntooltipEl.classList.add(\"tooltip\");\ndocument.body.appendChild(tooltipEl);\nlet tooltipHideId;\n\nconst YEAR_WIDTH = svg.viewBox.baseVal.width;\n\ninit();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/index.js\n ** module id = 0\n ** module chunks = 0\n **/","const constants = {\n  LS_KEY_EMAIL: \"bugzilla-email\",\n  X_PADDING: 0,\n  LINE_HEIGHT: 7.5,\n  DETAIL_PADDING: 15,\n  MONDAY_INDEX: 1,\n  MILLISECOND_A_DAY: (1000 * 60 * 60 * 24),\n  BUGZILLA_BIRTH_YEAR: 1998,\n  MONTHS: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ],\n  COLORS: [\n    \"rgb(244, 67, 54)\",\n    \"rgb(0, 150, 136)\",\n    \"rgb(96, 125, 139)\",\n    \"rgb(156, 39, 176)\",\n    \"rgb(103, 58, 183)\",\n    \"rgb(63, 81, 181)\",\n    \"rgb(33, 150, 243)\",\n    \"rgb(3, 169, 244)\",\n    \"rgb(0, 188, 212)\",\n    \"rgb(76, 175, 80)\",\n    \"rgb(139, 195, 74)\",\n    \"rgb(255, 193, 7)\",\n    \"rgb(255, 152, 0)\",\n    \"rgb(255, 87, 34)\",\n    \"rgb(233, 30, 99)\",\n    \"rgb(121, 85, 72)\"\n  ],\n  PRIORITY_REGEX: /^P[1-5]$/\n};\n\nmodule.exports = Object.assign({}, constants);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/constants.js\n ** module id = 3\n ** module chunks = 0\n **/","const BUGZILLA_API_URL = \"https://bugzilla.mozilla.org/rest/\";\n\nlet ApiHandler = {\n  getUserBugs: function (email) {\n    let fields = [\n      \"id\",\n      \"summary\",\n      \"status\",\n      \"cf_last_resolved\",\n      \"target_milestone\",\n      \"creation_time\",\n      \"resolution\",\n      \"assigned_to\",\n      \"creator\",\n      \"priority\",\n      \"flags\",\n    ];\n    let params = {\n      \"include_fields\": fields.join(\",\"),\n      \"email1\": email,\n      \"emailassigned_to1\": 1\n    };\n    let searchParams;\n    if (window.URLSearchParams) {\n      searchParams = new URLSearchParams();\n\n      Object.keys(params).forEach(function (key) {\n        searchParams.append(key, params[key]);\n      });\n      searchParams = searchParams.toString();\n    } else {\n      searchParams = [];\n      Object.keys(params).forEach(function (key) {\n        searchParams.push(key + \"=\" + params[key]);\n      });\n      searchParams = searchParams.join(\"&\");\n    }\n\n    let url = `${BUGZILLA_API_URL}bug?${searchParams}`;\n    let myHeaders = new Headers();\n    myHeaders.append(\"Accept\", \"application/json\");\n\n    return fetch(url, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: myHeaders\n    })\n    .then((response) => response.json());\n  },\n  getBugHistory: function (bugData) {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Accept\", \"application/json\");\n    var url = `${BUGZILLA_API_URL}bug/${bugData.id}/history`;\n    return fetch(url, {\n      mode: \"cors\",\n      method: \"GET\",\n      headers: myHeaders\n    })\n    .then((response) => response.json())\n    .then(function (data) {\n      let history = data.bugs[0].history;\n      history.unshift({\n        who: bugData.creator,\n        when: bugData.creation_time,\n        changes: [{\n          \"field_name\": \"Creation\",\n          removed: \"\",\n          added: \"\"\n        }]\n      });\n      return history;\n    });\n  }\n};\n\nmodule.exports.ApiHandler = ApiHandler;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/ApiHandler.js\n ** module id = 4\n ** module chunks = 0\n **/","const {MONDAY_INDEX, MILLISECOND_A_DAY} = require(\"./constants\");\n\nfunction needWhiteText(rgb) {\n  let values = rgb.replace(\"rgb(\", \"\").replace(\")\", \"\").replace(\" \", \"\").split(\",\");\n  let [r, g, b] = values.map(value => parseInt(value, 10));\n\n  let yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n  return (yiq < 120);\n}\n\nfunction getMondayOfFirstWeek(year) {\n  // First week of the year is the week where is January 4th\n  let currentYearJan4 = new Date(`${year}-01-04`);\n  return new Date(\n    currentYearJan4.getTime() -\n    ((currentYearJan4.getDay() - MONDAY_INDEX) * MILLISECOND_A_DAY)\n  );\n}\n\nfunction findLane(lanes, unpositionnedBugStart, unpositionnedBugEnd) {\n  if (lanes.length === 0) {\n    return 0;\n  }\n\n  let safeSpace = 5;\n  unpositionnedBugStart = unpositionnedBugStart - safeSpace;\n  unpositionnedBugEnd = unpositionnedBugEnd + safeSpace;\n\n  let laneNumber = 0;\n  let laneFound = lanes.some(function (lane, index) {\n    laneNumber = index;\n    // In order to fit in a lane, the bug must not overlap any\n    // bug in the lane.\n    // A bug a does not overlap a bug b if:\n    // - \"a\" ends before \"b\" starts\n    // - \"a\" starts after \"b\" ends\n    let fit = lane.every(function ([bugStart, bugEnd]) {\n      return (unpositionnedBugEnd < bugStart || unpositionnedBugStart > bugEnd);\n    });\n    // if the bug fits the lane, we can exit the loop\n    return fit;\n  });\n\n  if (laneFound) {\n    return laneNumber;\n  }\n\n  return ++laneNumber;\n}\n\nfunction createSVGElement(tagName, attributes, content) {\n  let el = document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\n  for (let key in attributes) {\n    el.setAttribute(key, attributes[key]);\n  }\n  if (content) {\n    el.innerHTML = content;\n  }\n  return el;\n}\n\nmodule.exports.needWhiteText = needWhiteText;\nmodule.exports.getMondayOfFirstWeek = getMondayOfFirstWeek;\nmodule.exports.findLane = findLane;\nmodule.exports.createSVGElement = createSVGElement;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/utils.js\n ** module id = 5\n ** module chunks = 0\n **/"],"sourceRoot":""}